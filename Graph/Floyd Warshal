const ll MAX = 105;

ll d[MAX][MAX];
ll n;

void Floyd_Warshal()
{    
    for(int i=0;i<MAX;i++)
        d[i][i]=0;
    
    for(int k=0;k<n;k++)
        for(int i=0;i<n;i++)
            for(int j=0;j<n;j++)
                d[i][j] = min(d[i][j], d[i][k] + d[k][j]);
}

int main()
{
    FIO;
    
    for(int i=0;i<MAX;i++)
        for(int j=0;j<MAX;j++)
            d[i][j]=INF;
    
    cin >> n;
    
    string s[300];
    
    for(int i=0;i<n;i++)
    {
        cin >> s[i];
        
        for(int j=0;j<n;j++)
            if(s[i][j] == '1') d[i][j]=1;
    }
    
    Floyd_Warshal();
    
    ll m;
    cin >> m;
    
    vector<ll> go(m), ans;
    
    for(int i=0;i<m;i++) cin >> go[i], go[i]--;
    
    ans.push_back(go[0]);
    
    ll last=0;
    for(int i=1;i<m;i++)
    {
        ll need = i-last;
        if( d[ans.back()][go[i]] < need )
        {
            last=i-1;
            ans.push_back(go[i-1]);
        }
    }
    
    if(ans.back() != go[m-1])
        ans.push_back(go[m-1]);
    
    cout << ans.size() << endl;
    for(ll p: ans) cout << p+1 <<" ";
    
    return 0;
}
